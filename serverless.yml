service: housing-repairs-online-frontend

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage}
  region: eu-west-2
  versionFunctions: true
  apiGateway:
    shouldStartNameWithService: true

package:
  excludeDevDependencies: true

functions:
  HousingRepairsOnlineFrontend:
    name: ${self:service}-${self:provider.stage}
    handler: lambda.handler
    package:
      include:
        - lambda.js
        - next.config.js
        - public/**
        - node_modules/**
    role: lambdaExecutionRole
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{any+}
          method: ANY

resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: 'Allow'
                  Action:
                    - 's3:PutObject'
                    - 's3:GetObject'
                  Resource:
                    Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - 'Ref': 'ServerlessDeploymentBucket'
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'lambda:InvokeFunction'
                  Resource: '*'
